ESTADOS

    Modificado (modified);
    Preparado (staged/index)
    Consolidado (comitted);

CONFIGURAR

git config --global user.name "Leonardo Comelli"
git config --global user.email leonardo@software-ltda.com.br
git config --global core.editor vim

LISTAR CONFIGURAÇÕES

git config --list

CRIAR NOVO REPOSITÓRIO

git init

VERIFICAR ESTADO DOS ARQUIVOS/DIRETÓRIOS

git status

ADICIONAR UM ARQUIVO/DIRETÓRIO

git add meu_arquivo_ou_diretorio

COMITAR

git commit meu_arquivo.txt meu_outro_arquivo.txt
git commit -m "minha mensagem de commit"

EXIBIR HISTÓRICO

git log
git log --graph
git log --decorate

git show <numero_do_hash_que_identifica_um_commit>

DESFAZENDO ALTERAÇÃO LOCAL
NO WORKING DIRECTORY - DESFAZER ALTERAÇÃO NO ARQUIVO - USAR SE AINDA NAO FOI DADO "git add"

git checkout -- meu_arquivo.txt

NO STAGING AREA - VOLTA PRA ANTES DO "git add" - USAR QUANDO JÁ FOI DADO "git add" - SERIA UM "git DESadd"

git reset HEAD meu_arquivo.txt

VOLTA PRA DEPOIS DO "git add"
git reset --soft <numero_do_hash_que_identifica_um_commit_anterior_ao_que _eu_quero_matar>

VOLTA PRA ANTES DO "git add"
git reset --mixed <numero_do_hash_que_identifica_um_commit_anterior_ao_que _eu_quero_matar>

VOLTA E MATA TUDO. OS ARQUIVOS DEIXAM DE EXISTIR E NADA DESFAZ ISSO E PRA RE-SUBIR PRO REPOSITÓRIO AINDA FODE OS LOGS. NUNCA USAR!!!!
git reset --hard <numero_do_hash_que_identifica_um_commit_anterior_ao_que _eu_quero_matar>
